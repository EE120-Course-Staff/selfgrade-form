import os
import json

possible_scores = tuple(map(str, range(0, 6))) + tuple(range(0, 6))
generic_error_message = " Did you upload the file generated by the selfgrade form, without modifications? If so, post on Ed and course staff can help debug this error."
tol = 1e-6

def write_result(score, output):
    with open('/autograder/results/results.json', 'w') as f:
        f.write('{"score": %d, "output": "%s"}' % (score, output))

def grade():
    files = os.listdir('/autograder/submission')
    if len(files) != 1:
        write_result(0, "You must upload the file generated by the selfgrade form, and that file only.")
        return
        
    with open('/autograder/submission/%s' % files[0], 'r') as f:
        try:
            data = json.load(f)
        except:
            write_result(0, "Could not parse JSON file!" + generic_error_message)
            return
       
        score = 0
        total = 0
        
        if "questions" not in data:
            write_result(0, "JSON file submitted did not include a 'questions' field." + generic_error_message)
            return

        for key in data["questions"]:
            qn = data["questions"][key]
            if not "grade" in qn or not "points" in qn or qn["grade"] not in possible_scores:
                write_result(0, "Malformed question '%s' (did not include 'grade' or 'points' field, or 'grade' is not from 0 to 5)." % key + generic_error_message)
                return
            score += int(qn["grade"]) / 5 * float(qn["points"])
            total += float(qn["points"])
        if abs(total - 100) > tol:
            write_result(0, "Total number of points, %d, did not add to 100." % total + generic_error_message)
            return

        write_result(score, "Your total score was %0.4f/100." % score)

grade()
